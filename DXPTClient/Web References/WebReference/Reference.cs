//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace DXPTClient.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendVoiceByVarOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendVoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendVoiceByCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendVoiceByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsStateReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsRespOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSmsPriOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSmsByTimingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSms6OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSms2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSms3OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSms4OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSms5OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSmsByTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSmsExOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSmsByTplExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVoiceStateReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVoiceCheckReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserChargeLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserChargeLogArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendVoice3OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendVoice2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVoiceResultReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVoiceRangeResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVoiceResultByIDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::DXPTClient.Properties.Settings.Default.DXPTClient_WebReference_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendVoiceByVarCompletedEventHandler SendVoiceByVarCompleted;
        
        /// <remarks/>
        public event SendVoiceCompletedEventHandler SendVoiceCompleted;
        
        /// <remarks/>
        public event SendVoiceByCheckCompletedEventHandler SendVoiceByCheckCompleted;
        
        /// <remarks/>
        public event SendVoiceByIdCompletedEventHandler SendVoiceByIdCompleted;
        
        /// <remarks/>
        public event GetSmsStateReportCompletedEventHandler GetSmsStateReportCompleted;
        
        /// <remarks/>
        public event GetSmsRespCompletedEventHandler GetSmsRespCompleted;
        
        /// <remarks/>
        public event SendSmsPriCompletedEventHandler SendSmsPriCompleted;
        
        /// <remarks/>
        public event SendSmsByTimingCompletedEventHandler SendSmsByTimingCompleted;
        
        /// <remarks/>
        public event SendSms6CompletedEventHandler SendSms6Completed;
        
        /// <remarks/>
        public event SendSmsCompletedEventHandler SendSmsCompleted;
        
        /// <remarks/>
        public event SendSms2CompletedEventHandler SendSms2Completed;
        
        /// <remarks/>
        public event SendSms3CompletedEventHandler SendSms3Completed;
        
        /// <remarks/>
        public event SendSms4CompletedEventHandler SendSms4Completed;
        
        /// <remarks/>
        public event SendSms5CompletedEventHandler SendSms5Completed;
        
        /// <remarks/>
        public event SendSmsByTemplateCompletedEventHandler SendSmsByTemplateCompleted;
        
        /// <remarks/>
        public event SendSmsExCompletedEventHandler SendSmsExCompleted;
        
        /// <remarks/>
        public event SendSmsByTplExCompletedEventHandler SendSmsByTplExCompleted;
        
        /// <remarks/>
        public event GetVoiceStateReportCompletedEventHandler GetVoiceStateReportCompleted;
        
        /// <remarks/>
        public event GetVoiceCheckReportCompletedEventHandler GetVoiceCheckReportCompleted;
        
        /// <remarks/>
        public event GetUserChargeLogCompletedEventHandler GetUserChargeLogCompleted;
        
        /// <remarks/>
        public event GetUserChargeLogArrayCompletedEventHandler GetUserChargeLogArrayCompleted;
        
        /// <remarks/>
        public event GetBalanceCompletedEventHandler GetBalanceCompleted;
        
        /// <remarks/>
        public event GetSmsStateCompletedEventHandler GetSmsStateCompleted;
        
        /// <remarks/>
        public event SendVoice3CompletedEventHandler SendVoice3Completed;
        
        /// <remarks/>
        public event SendVoice2CompletedEventHandler SendVoice2Completed;
        
        /// <remarks/>
        public event GetVoiceResultReportCompletedEventHandler GetVoiceResultReportCompleted;
        
        /// <remarks/>
        public event GetVoiceRangeResultCompletedEventHandler GetVoiceRangeResultCompleted;
        
        /// <remarks/>
        public event GetVoiceResultByIDCompletedEventHandler GetVoiceResultByIDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendVoiceByVar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendVoiceByVar(
                    string login_name, 
                    string password, 
                    string mobile, 
                    string varmsg, 
                    string template_id, 
                    string retry_interval, 
                    string called_times, 
                    string start_time, 
                    string end_time, 
                    string start_time1, 
                    string end_time1, 
                    string start_time2, 
                    string end_time2, 
                    string start_time3, 
                    string end_time3, 
                    string start_time4, 
                    string end_time4, 
                    string Search_ID, 
                    string child_id, 
                    string host_id) {
            object[] results = this.Invoke("SendVoiceByVar", new object[] {
                        login_name,
                        password,
                        mobile,
                        varmsg,
                        template_id,
                        retry_interval,
                        called_times,
                        start_time,
                        end_time,
                        start_time1,
                        end_time1,
                        start_time2,
                        end_time2,
                        start_time3,
                        end_time3,
                        start_time4,
                        end_time4,
                        Search_ID,
                        child_id,
                        host_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendVoiceByVarAsync(
                    string login_name, 
                    string password, 
                    string mobile, 
                    string varmsg, 
                    string template_id, 
                    string retry_interval, 
                    string called_times, 
                    string start_time, 
                    string end_time, 
                    string start_time1, 
                    string end_time1, 
                    string start_time2, 
                    string end_time2, 
                    string start_time3, 
                    string end_time3, 
                    string start_time4, 
                    string end_time4, 
                    string Search_ID, 
                    string child_id, 
                    string host_id) {
            this.SendVoiceByVarAsync(login_name, password, mobile, varmsg, template_id, retry_interval, called_times, start_time, end_time, start_time1, end_time1, start_time2, end_time2, start_time3, end_time3, start_time4, end_time4, Search_ID, child_id, host_id, null);
        }
        
        /// <remarks/>
        public void SendVoiceByVarAsync(
                    string login_name, 
                    string password, 
                    string mobile, 
                    string varmsg, 
                    string template_id, 
                    string retry_interval, 
                    string called_times, 
                    string start_time, 
                    string end_time, 
                    string start_time1, 
                    string end_time1, 
                    string start_time2, 
                    string end_time2, 
                    string start_time3, 
                    string end_time3, 
                    string start_time4, 
                    string end_time4, 
                    string Search_ID, 
                    string child_id, 
                    string host_id, 
                    object userState) {
            if ((this.SendVoiceByVarOperationCompleted == null)) {
                this.SendVoiceByVarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendVoiceByVarOperationCompleted);
            }
            this.InvokeAsync("SendVoiceByVar", new object[] {
                        login_name,
                        password,
                        mobile,
                        varmsg,
                        template_id,
                        retry_interval,
                        called_times,
                        start_time,
                        end_time,
                        start_time1,
                        end_time1,
                        start_time2,
                        end_time2,
                        start_time3,
                        end_time3,
                        start_time4,
                        end_time4,
                        Search_ID,
                        child_id,
                        host_id}, this.SendVoiceByVarOperationCompleted, userState);
        }
        
        private void OnSendVoiceByVarOperationCompleted(object arg) {
            if ((this.SendVoiceByVarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendVoiceByVarCompleted(this, new SendVoiceByVarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendVoice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendVoice(string login_name, string password, string mobile, string msg, string retry_interval, string called_times, string start_time, string end_time, string Search_ID) {
            object[] results = this.Invoke("SendVoice", new object[] {
                        login_name,
                        password,
                        mobile,
                        msg,
                        retry_interval,
                        called_times,
                        start_time,
                        end_time,
                        Search_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendVoiceAsync(string login_name, string password, string mobile, string msg, string retry_interval, string called_times, string start_time, string end_time, string Search_ID) {
            this.SendVoiceAsync(login_name, password, mobile, msg, retry_interval, called_times, start_time, end_time, Search_ID, null);
        }
        
        /// <remarks/>
        public void SendVoiceAsync(string login_name, string password, string mobile, string msg, string retry_interval, string called_times, string start_time, string end_time, string Search_ID, object userState) {
            if ((this.SendVoiceOperationCompleted == null)) {
                this.SendVoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendVoiceOperationCompleted);
            }
            this.InvokeAsync("SendVoice", new object[] {
                        login_name,
                        password,
                        mobile,
                        msg,
                        retry_interval,
                        called_times,
                        start_time,
                        end_time,
                        Search_ID}, this.SendVoiceOperationCompleted, userState);
        }
        
        private void OnSendVoiceOperationCompleted(object arg) {
            if ((this.SendVoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendVoiceCompleted(this, new SendVoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendVoiceByCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendVoiceByCheck(string login_name, string password, string mobile, string start_time, string end_time, string Search_ID, string child_id, string host_id) {
            object[] results = this.Invoke("SendVoiceByCheck", new object[] {
                        login_name,
                        password,
                        mobile,
                        start_time,
                        end_time,
                        Search_ID,
                        child_id,
                        host_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendVoiceByCheckAsync(string login_name, string password, string mobile, string start_time, string end_time, string Search_ID, string child_id, string host_id) {
            this.SendVoiceByCheckAsync(login_name, password, mobile, start_time, end_time, Search_ID, child_id, host_id, null);
        }
        
        /// <remarks/>
        public void SendVoiceByCheckAsync(string login_name, string password, string mobile, string start_time, string end_time, string Search_ID, string child_id, string host_id, object userState) {
            if ((this.SendVoiceByCheckOperationCompleted == null)) {
                this.SendVoiceByCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendVoiceByCheckOperationCompleted);
            }
            this.InvokeAsync("SendVoiceByCheck", new object[] {
                        login_name,
                        password,
                        mobile,
                        start_time,
                        end_time,
                        Search_ID,
                        child_id,
                        host_id}, this.SendVoiceByCheckOperationCompleted, userState);
        }
        
        private void OnSendVoiceByCheckOperationCompleted(object arg) {
            if ((this.SendVoiceByCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendVoiceByCheckCompleted(this, new SendVoiceByCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendVoiceById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendVoiceById(
                    string login_name, 
                    string password, 
                    string mobile, 
                    string template_id, 
                    string content, 
                    string retry_interval, 
                    string called_times, 
                    string start_time, 
                    string end_time, 
                    string start_time1, 
                    string end_time1, 
                    string start_time2, 
                    string end_time2, 
                    string start_time3, 
                    string end_time3, 
                    string start_time4, 
                    string end_time4, 
                    string Search_ID, 
                    string child_id, 
                    string host_id) {
            object[] results = this.Invoke("SendVoiceById", new object[] {
                        login_name,
                        password,
                        mobile,
                        template_id,
                        content,
                        retry_interval,
                        called_times,
                        start_time,
                        end_time,
                        start_time1,
                        end_time1,
                        start_time2,
                        end_time2,
                        start_time3,
                        end_time3,
                        start_time4,
                        end_time4,
                        Search_ID,
                        child_id,
                        host_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendVoiceByIdAsync(
                    string login_name, 
                    string password, 
                    string mobile, 
                    string template_id, 
                    string content, 
                    string retry_interval, 
                    string called_times, 
                    string start_time, 
                    string end_time, 
                    string start_time1, 
                    string end_time1, 
                    string start_time2, 
                    string end_time2, 
                    string start_time3, 
                    string end_time3, 
                    string start_time4, 
                    string end_time4, 
                    string Search_ID, 
                    string child_id, 
                    string host_id) {
            this.SendVoiceByIdAsync(login_name, password, mobile, template_id, content, retry_interval, called_times, start_time, end_time, start_time1, end_time1, start_time2, end_time2, start_time3, end_time3, start_time4, end_time4, Search_ID, child_id, host_id, null);
        }
        
        /// <remarks/>
        public void SendVoiceByIdAsync(
                    string login_name, 
                    string password, 
                    string mobile, 
                    string template_id, 
                    string content, 
                    string retry_interval, 
                    string called_times, 
                    string start_time, 
                    string end_time, 
                    string start_time1, 
                    string end_time1, 
                    string start_time2, 
                    string end_time2, 
                    string start_time3, 
                    string end_time3, 
                    string start_time4, 
                    string end_time4, 
                    string Search_ID, 
                    string child_id, 
                    string host_id, 
                    object userState) {
            if ((this.SendVoiceByIdOperationCompleted == null)) {
                this.SendVoiceByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendVoiceByIdOperationCompleted);
            }
            this.InvokeAsync("SendVoiceById", new object[] {
                        login_name,
                        password,
                        mobile,
                        template_id,
                        content,
                        retry_interval,
                        called_times,
                        start_time,
                        end_time,
                        start_time1,
                        end_time1,
                        start_time2,
                        end_time2,
                        start_time3,
                        end_time3,
                        start_time4,
                        end_time4,
                        Search_ID,
                        child_id,
                        host_id}, this.SendVoiceByIdOperationCompleted, userState);
        }
        
        private void OnSendVoiceByIdOperationCompleted(object arg) {
            if ((this.SendVoiceByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendVoiceByIdCompleted(this, new SendVoiceByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSmsStateReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSmsStateReport(string login_name, string password) {
            object[] results = this.Invoke("GetSmsStateReport", new object[] {
                        login_name,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmsStateReportAsync(string login_name, string password) {
            this.GetSmsStateReportAsync(login_name, password, null);
        }
        
        /// <remarks/>
        public void GetSmsStateReportAsync(string login_name, string password, object userState) {
            if ((this.GetSmsStateReportOperationCompleted == null)) {
                this.GetSmsStateReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsStateReportOperationCompleted);
            }
            this.InvokeAsync("GetSmsStateReport", new object[] {
                        login_name,
                        password}, this.GetSmsStateReportOperationCompleted, userState);
        }
        
        private void OnGetSmsStateReportOperationCompleted(object arg) {
            if ((this.GetSmsStateReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsStateReportCompleted(this, new GetSmsStateReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSmsResp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSmsResp(string login_name, string password) {
            object[] results = this.Invoke("GetSmsResp", new object[] {
                        login_name,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmsRespAsync(string login_name, string password) {
            this.GetSmsRespAsync(login_name, password, null);
        }
        
        /// <remarks/>
        public void GetSmsRespAsync(string login_name, string password, object userState) {
            if ((this.GetSmsRespOperationCompleted == null)) {
                this.GetSmsRespOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsRespOperationCompleted);
            }
            this.InvokeAsync("GetSmsResp", new object[] {
                        login_name,
                        password}, this.GetSmsRespOperationCompleted, userState);
        }
        
        private void OnGetSmsRespOperationCompleted(object arg) {
            if ((this.GetSmsRespCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsRespCompleted(this, new GetSmsRespCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSmsPri", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSmsPri(string login_name, string password, string mobile, string message, string start_time, int taskPri, string Search_ID) {
            object[] results = this.Invoke("SendSmsPri", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time,
                        taskPri,
                        Search_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSmsPriAsync(string login_name, string password, string mobile, string message, string start_time, int taskPri, string Search_ID) {
            this.SendSmsPriAsync(login_name, password, mobile, message, start_time, taskPri, Search_ID, null);
        }
        
        /// <remarks/>
        public void SendSmsPriAsync(string login_name, string password, string mobile, string message, string start_time, int taskPri, string Search_ID, object userState) {
            if ((this.SendSmsPriOperationCompleted == null)) {
                this.SendSmsPriOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSmsPriOperationCompleted);
            }
            this.InvokeAsync("SendSmsPri", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time,
                        taskPri,
                        Search_ID}, this.SendSmsPriOperationCompleted, userState);
        }
        
        private void OnSendSmsPriOperationCompleted(object arg) {
            if ((this.SendSmsPriCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSmsPriCompleted(this, new SendSmsPriCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSmsByTiming", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSmsByTiming(string login_name, string password, string mobile, string message, double start_hour, double end_hour, string interface_id) {
            object[] results = this.Invoke("SendSmsByTiming", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_hour,
                        end_hour,
                        interface_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSmsByTimingAsync(string login_name, string password, string mobile, string message, double start_hour, double end_hour, string interface_id) {
            this.SendSmsByTimingAsync(login_name, password, mobile, message, start_hour, end_hour, interface_id, null);
        }
        
        /// <remarks/>
        public void SendSmsByTimingAsync(string login_name, string password, string mobile, string message, double start_hour, double end_hour, string interface_id, object userState) {
            if ((this.SendSmsByTimingOperationCompleted == null)) {
                this.SendSmsByTimingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSmsByTimingOperationCompleted);
            }
            this.InvokeAsync("SendSmsByTiming", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_hour,
                        end_hour,
                        interface_id}, this.SendSmsByTimingOperationCompleted, userState);
        }
        
        private void OnSendSmsByTimingOperationCompleted(object arg) {
            if ((this.SendSmsByTimingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSmsByTimingCompleted(this, new SendSmsByTimingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSms6", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSms6(string login_name, string password, string mobile, string message, string start_time, int taskPri, string Search_ID, string busiType) {
            object[] results = this.Invoke("SendSms6", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time,
                        taskPri,
                        Search_ID,
                        busiType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSms6Async(string login_name, string password, string mobile, string message, string start_time, int taskPri, string Search_ID, string busiType) {
            this.SendSms6Async(login_name, password, mobile, message, start_time, taskPri, Search_ID, busiType, null);
        }
        
        /// <remarks/>
        public void SendSms6Async(string login_name, string password, string mobile, string message, string start_time, int taskPri, string Search_ID, string busiType, object userState) {
            if ((this.SendSms6OperationCompleted == null)) {
                this.SendSms6OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSms6OperationCompleted);
            }
            this.InvokeAsync("SendSms6", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time,
                        taskPri,
                        Search_ID,
                        busiType}, this.SendSms6OperationCompleted, userState);
        }
        
        private void OnSendSms6OperationCompleted(object arg) {
            if ((this.SendSms6Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSms6Completed(this, new SendSms6CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSms(string login_name, string password, string mobile, string message, string start_time, string Search_ID) {
            object[] results = this.Invoke("SendSms", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time,
                        Search_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSmsAsync(string login_name, string password, string mobile, string message, string start_time, string Search_ID) {
            this.SendSmsAsync(login_name, password, mobile, message, start_time, Search_ID, null);
        }
        
        /// <remarks/>
        public void SendSmsAsync(string login_name, string password, string mobile, string message, string start_time, string Search_ID, object userState) {
            if ((this.SendSmsOperationCompleted == null)) {
                this.SendSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSmsOperationCompleted);
            }
            this.InvokeAsync("SendSms", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time,
                        Search_ID}, this.SendSmsOperationCompleted, userState);
        }
        
        private void OnSendSmsOperationCompleted(object arg) {
            if ((this.SendSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSmsCompleted(this, new SendSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSms2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSms2(string login_name, string password, string mobile, string message, string start_time) {
            object[] results = this.Invoke("SendSms2", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSms2Async(string login_name, string password, string mobile, string message, string start_time) {
            this.SendSms2Async(login_name, password, mobile, message, start_time, null);
        }
        
        /// <remarks/>
        public void SendSms2Async(string login_name, string password, string mobile, string message, string start_time, object userState) {
            if ((this.SendSms2OperationCompleted == null)) {
                this.SendSms2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSms2OperationCompleted);
            }
            this.InvokeAsync("SendSms2", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time}, this.SendSms2OperationCompleted, userState);
        }
        
        private void OnSendSms2OperationCompleted(object arg) {
            if ((this.SendSms2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSms2Completed(this, new SendSms2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSms3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSms3(string login_name, string password, string mobile, string message) {
            object[] results = this.Invoke("SendSms3", new object[] {
                        login_name,
                        password,
                        mobile,
                        message});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSms3Async(string login_name, string password, string mobile, string message) {
            this.SendSms3Async(login_name, password, mobile, message, null);
        }
        
        /// <remarks/>
        public void SendSms3Async(string login_name, string password, string mobile, string message, object userState) {
            if ((this.SendSms3OperationCompleted == null)) {
                this.SendSms3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSms3OperationCompleted);
            }
            this.InvokeAsync("SendSms3", new object[] {
                        login_name,
                        password,
                        mobile,
                        message}, this.SendSms3OperationCompleted, userState);
        }
        
        private void OnSendSms3OperationCompleted(object arg) {
            if ((this.SendSms3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSms3Completed(this, new SendSms3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSms4", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSms4(string login_name, string password, string mobile, string message, string start_time, string Search_ID, string childUser) {
            object[] results = this.Invoke("SendSms4", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time,
                        Search_ID,
                        childUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSms4Async(string login_name, string password, string mobile, string message, string start_time, string Search_ID, string childUser) {
            this.SendSms4Async(login_name, password, mobile, message, start_time, Search_ID, childUser, null);
        }
        
        /// <remarks/>
        public void SendSms4Async(string login_name, string password, string mobile, string message, string start_time, string Search_ID, string childUser, object userState) {
            if ((this.SendSms4OperationCompleted == null)) {
                this.SendSms4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSms4OperationCompleted);
            }
            this.InvokeAsync("SendSms4", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time,
                        Search_ID,
                        childUser}, this.SendSms4OperationCompleted, userState);
        }
        
        private void OnSendSms4OperationCompleted(object arg) {
            if ((this.SendSms4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSms4Completed(this, new SendSms4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSms5", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSms5(string login_name, string password, string mobile, string message, string start_time, string Search_ID, string busiType) {
            object[] results = this.Invoke("SendSms5", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time,
                        Search_ID,
                        busiType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSms5Async(string login_name, string password, string mobile, string message, string start_time, string Search_ID, string busiType) {
            this.SendSms5Async(login_name, password, mobile, message, start_time, Search_ID, busiType, null);
        }
        
        /// <remarks/>
        public void SendSms5Async(string login_name, string password, string mobile, string message, string start_time, string Search_ID, string busiType, object userState) {
            if ((this.SendSms5OperationCompleted == null)) {
                this.SendSms5OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSms5OperationCompleted);
            }
            this.InvokeAsync("SendSms5", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time,
                        Search_ID,
                        busiType}, this.SendSms5OperationCompleted, userState);
        }
        
        private void OnSendSms5OperationCompleted(object arg) {
            if ((this.SendSms5Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSms5Completed(this, new SendSms5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSmsByTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSmsByTemplate(string login_name, string password, string mobile, string message, string start_time, string Search_ID, string templateid) {
            object[] results = this.Invoke("SendSmsByTemplate", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time,
                        Search_ID,
                        templateid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSmsByTemplateAsync(string login_name, string password, string mobile, string message, string start_time, string Search_ID, string templateid) {
            this.SendSmsByTemplateAsync(login_name, password, mobile, message, start_time, Search_ID, templateid, null);
        }
        
        /// <remarks/>
        public void SendSmsByTemplateAsync(string login_name, string password, string mobile, string message, string start_time, string Search_ID, string templateid, object userState) {
            if ((this.SendSmsByTemplateOperationCompleted == null)) {
                this.SendSmsByTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSmsByTemplateOperationCompleted);
            }
            this.InvokeAsync("SendSmsByTemplate", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time,
                        Search_ID,
                        templateid}, this.SendSmsByTemplateOperationCompleted, userState);
        }
        
        private void OnSendSmsByTemplateOperationCompleted(object arg) {
            if ((this.SendSmsByTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSmsByTemplateCompleted(this, new SendSmsByTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSmsEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSmsEx(string login_name, string password, string mobile, string message, string start_time, string Search_ID, string ex_var1, string ex_var2, string ex_var3, string ex_var4) {
            object[] results = this.Invoke("SendSmsEx", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time,
                        Search_ID,
                        ex_var1,
                        ex_var2,
                        ex_var3,
                        ex_var4});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSmsExAsync(string login_name, string password, string mobile, string message, string start_time, string Search_ID, string ex_var1, string ex_var2, string ex_var3, string ex_var4) {
            this.SendSmsExAsync(login_name, password, mobile, message, start_time, Search_ID, ex_var1, ex_var2, ex_var3, ex_var4, null);
        }
        
        /// <remarks/>
        public void SendSmsExAsync(string login_name, string password, string mobile, string message, string start_time, string Search_ID, string ex_var1, string ex_var2, string ex_var3, string ex_var4, object userState) {
            if ((this.SendSmsExOperationCompleted == null)) {
                this.SendSmsExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSmsExOperationCompleted);
            }
            this.InvokeAsync("SendSmsEx", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time,
                        Search_ID,
                        ex_var1,
                        ex_var2,
                        ex_var3,
                        ex_var4}, this.SendSmsExOperationCompleted, userState);
        }
        
        private void OnSendSmsExOperationCompleted(object arg) {
            if ((this.SendSmsExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSmsExCompleted(this, new SendSmsExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSmsByTplEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSmsByTplEx(string login_name, string password, string mobile, string message, string start_time, string Search_ID, string templateid, string ex_var1, string ex_var2, string ex_var3, string ex_var4) {
            object[] results = this.Invoke("SendSmsByTplEx", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time,
                        Search_ID,
                        templateid,
                        ex_var1,
                        ex_var2,
                        ex_var3,
                        ex_var4});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSmsByTplExAsync(string login_name, string password, string mobile, string message, string start_time, string Search_ID, string templateid, string ex_var1, string ex_var2, string ex_var3, string ex_var4) {
            this.SendSmsByTplExAsync(login_name, password, mobile, message, start_time, Search_ID, templateid, ex_var1, ex_var2, ex_var3, ex_var4, null);
        }
        
        /// <remarks/>
        public void SendSmsByTplExAsync(string login_name, string password, string mobile, string message, string start_time, string Search_ID, string templateid, string ex_var1, string ex_var2, string ex_var3, string ex_var4, object userState) {
            if ((this.SendSmsByTplExOperationCompleted == null)) {
                this.SendSmsByTplExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSmsByTplExOperationCompleted);
            }
            this.InvokeAsync("SendSmsByTplEx", new object[] {
                        login_name,
                        password,
                        mobile,
                        message,
                        start_time,
                        Search_ID,
                        templateid,
                        ex_var1,
                        ex_var2,
                        ex_var3,
                        ex_var4}, this.SendSmsByTplExOperationCompleted, userState);
        }
        
        private void OnSendSmsByTplExOperationCompleted(object arg) {
            if ((this.SendSmsByTplExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSmsByTplExCompleted(this, new SendSmsByTplExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVoiceStateReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVoiceStateReport(string login_name, string password) {
            object[] results = this.Invoke("GetVoiceStateReport", new object[] {
                        login_name,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVoiceStateReportAsync(string login_name, string password) {
            this.GetVoiceStateReportAsync(login_name, password, null);
        }
        
        /// <remarks/>
        public void GetVoiceStateReportAsync(string login_name, string password, object userState) {
            if ((this.GetVoiceStateReportOperationCompleted == null)) {
                this.GetVoiceStateReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVoiceStateReportOperationCompleted);
            }
            this.InvokeAsync("GetVoiceStateReport", new object[] {
                        login_name,
                        password}, this.GetVoiceStateReportOperationCompleted, userState);
        }
        
        private void OnGetVoiceStateReportOperationCompleted(object arg) {
            if ((this.GetVoiceStateReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVoiceStateReportCompleted(this, new GetVoiceStateReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVoiceCheckReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVoiceCheckReport(string login_name, string password) {
            object[] results = this.Invoke("GetVoiceCheckReport", new object[] {
                        login_name,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVoiceCheckReportAsync(string login_name, string password) {
            this.GetVoiceCheckReportAsync(login_name, password, null);
        }
        
        /// <remarks/>
        public void GetVoiceCheckReportAsync(string login_name, string password, object userState) {
            if ((this.GetVoiceCheckReportOperationCompleted == null)) {
                this.GetVoiceCheckReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVoiceCheckReportOperationCompleted);
            }
            this.InvokeAsync("GetVoiceCheckReport", new object[] {
                        login_name,
                        password}, this.GetVoiceCheckReportOperationCompleted, userState);
        }
        
        private void OnGetVoiceCheckReportOperationCompleted(object arg) {
            if ((this.GetVoiceCheckReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVoiceCheckReportCompleted(this, new GetVoiceCheckReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserChargeLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserChargeLog(string login_name, string password, string start_time, string end_time) {
            object[] results = this.Invoke("GetUserChargeLog", new object[] {
                        login_name,
                        password,
                        start_time,
                        end_time});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserChargeLogAsync(string login_name, string password, string start_time, string end_time) {
            this.GetUserChargeLogAsync(login_name, password, start_time, end_time, null);
        }
        
        /// <remarks/>
        public void GetUserChargeLogAsync(string login_name, string password, string start_time, string end_time, object userState) {
            if ((this.GetUserChargeLogOperationCompleted == null)) {
                this.GetUserChargeLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserChargeLogOperationCompleted);
            }
            this.InvokeAsync("GetUserChargeLog", new object[] {
                        login_name,
                        password,
                        start_time,
                        end_time}, this.GetUserChargeLogOperationCompleted, userState);
        }
        
        private void OnGetUserChargeLogOperationCompleted(object arg) {
            if ((this.GetUserChargeLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserChargeLogCompleted(this, new GetUserChargeLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserChargeLogArray", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RechargeLog[] GetUserChargeLogArray(string login_name, string password, string start_time, string end_time) {
            object[] results = this.Invoke("GetUserChargeLogArray", new object[] {
                        login_name,
                        password,
                        start_time,
                        end_time});
            return ((RechargeLog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserChargeLogArrayAsync(string login_name, string password, string start_time, string end_time) {
            this.GetUserChargeLogArrayAsync(login_name, password, start_time, end_time, null);
        }
        
        /// <remarks/>
        public void GetUserChargeLogArrayAsync(string login_name, string password, string start_time, string end_time, object userState) {
            if ((this.GetUserChargeLogArrayOperationCompleted == null)) {
                this.GetUserChargeLogArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserChargeLogArrayOperationCompleted);
            }
            this.InvokeAsync("GetUserChargeLogArray", new object[] {
                        login_name,
                        password,
                        start_time,
                        end_time}, this.GetUserChargeLogArrayOperationCompleted, userState);
        }
        
        private void OnGetUserChargeLogArrayOperationCompleted(object arg) {
            if ((this.GetUserChargeLogArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserChargeLogArrayCompleted(this, new GetUserChargeLogArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBalance(string login_name, string password) {
            object[] results = this.Invoke("GetBalance", new object[] {
                        login_name,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBalanceAsync(string login_name, string password) {
            this.GetBalanceAsync(login_name, password, null);
        }
        
        /// <remarks/>
        public void GetBalanceAsync(string login_name, string password, object userState) {
            if ((this.GetBalanceOperationCompleted == null)) {
                this.GetBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBalanceOperationCompleted);
            }
            this.InvokeAsync("GetBalance", new object[] {
                        login_name,
                        password}, this.GetBalanceOperationCompleted, userState);
        }
        
        private void OnGetBalanceOperationCompleted(object arg) {
            if ((this.GetBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBalanceCompleted(this, new GetBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSmsState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSmsState(string login_name, string password, string searchId) {
            object[] results = this.Invoke("GetSmsState", new object[] {
                        login_name,
                        password,
                        searchId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmsStateAsync(string login_name, string password, string searchId) {
            this.GetSmsStateAsync(login_name, password, searchId, null);
        }
        
        /// <remarks/>
        public void GetSmsStateAsync(string login_name, string password, string searchId, object userState) {
            if ((this.GetSmsStateOperationCompleted == null)) {
                this.GetSmsStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsStateOperationCompleted);
            }
            this.InvokeAsync("GetSmsState", new object[] {
                        login_name,
                        password,
                        searchId}, this.GetSmsStateOperationCompleted, userState);
        }
        
        private void OnGetSmsStateOperationCompleted(object arg) {
            if ((this.GetSmsStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsStateCompleted(this, new GetSmsStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendVoice3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendVoice3(string login_name, string password, string mobile, string varmsg, string template_id, string cid, string count, string exec_time, string exvar2, string exvar3) {
            object[] results = this.Invoke("SendVoice3", new object[] {
                        login_name,
                        password,
                        mobile,
                        varmsg,
                        template_id,
                        cid,
                        count,
                        exec_time,
                        exvar2,
                        exvar3});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendVoice3Async(string login_name, string password, string mobile, string varmsg, string template_id, string cid, string count, string exec_time, string exvar2, string exvar3) {
            this.SendVoice3Async(login_name, password, mobile, varmsg, template_id, cid, count, exec_time, exvar2, exvar3, null);
        }
        
        /// <remarks/>
        public void SendVoice3Async(string login_name, string password, string mobile, string varmsg, string template_id, string cid, string count, string exec_time, string exvar2, string exvar3, object userState) {
            if ((this.SendVoice3OperationCompleted == null)) {
                this.SendVoice3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendVoice3OperationCompleted);
            }
            this.InvokeAsync("SendVoice3", new object[] {
                        login_name,
                        password,
                        mobile,
                        varmsg,
                        template_id,
                        cid,
                        count,
                        exec_time,
                        exvar2,
                        exvar3}, this.SendVoice3OperationCompleted, userState);
        }
        
        private void OnSendVoice3OperationCompleted(object arg) {
            if ((this.SendVoice3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendVoice3Completed(this, new SendVoice3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendVoice2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendVoice2(string login_name, string password, string mobile, string varmsg, string template_id, string cid, string count, string exec_time, string exvar2, string exvar3, string in_date) {
            object[] results = this.Invoke("SendVoice2", new object[] {
                        login_name,
                        password,
                        mobile,
                        varmsg,
                        template_id,
                        cid,
                        count,
                        exec_time,
                        exvar2,
                        exvar3,
                        in_date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendVoice2Async(string login_name, string password, string mobile, string varmsg, string template_id, string cid, string count, string exec_time, string exvar2, string exvar3, string in_date) {
            this.SendVoice2Async(login_name, password, mobile, varmsg, template_id, cid, count, exec_time, exvar2, exvar3, in_date, null);
        }
        
        /// <remarks/>
        public void SendVoice2Async(string login_name, string password, string mobile, string varmsg, string template_id, string cid, string count, string exec_time, string exvar2, string exvar3, string in_date, object userState) {
            if ((this.SendVoice2OperationCompleted == null)) {
                this.SendVoice2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendVoice2OperationCompleted);
            }
            this.InvokeAsync("SendVoice2", new object[] {
                        login_name,
                        password,
                        mobile,
                        varmsg,
                        template_id,
                        cid,
                        count,
                        exec_time,
                        exvar2,
                        exvar3,
                        in_date}, this.SendVoice2OperationCompleted, userState);
        }
        
        private void OnSendVoice2OperationCompleted(object arg) {
            if ((this.SendVoice2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendVoice2Completed(this, new SendVoice2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVoiceResultReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVoiceResultReport(string login_name, string password) {
            object[] results = this.Invoke("GetVoiceResultReport", new object[] {
                        login_name,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVoiceResultReportAsync(string login_name, string password) {
            this.GetVoiceResultReportAsync(login_name, password, null);
        }
        
        /// <remarks/>
        public void GetVoiceResultReportAsync(string login_name, string password, object userState) {
            if ((this.GetVoiceResultReportOperationCompleted == null)) {
                this.GetVoiceResultReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVoiceResultReportOperationCompleted);
            }
            this.InvokeAsync("GetVoiceResultReport", new object[] {
                        login_name,
                        password}, this.GetVoiceResultReportOperationCompleted, userState);
        }
        
        private void OnGetVoiceResultReportOperationCompleted(object arg) {
            if ((this.GetVoiceResultReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVoiceResultReportCompleted(this, new GetVoiceResultReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVoiceRangeResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVoiceRangeResult(string login_name, string password, string bgTime, string endTime) {
            object[] results = this.Invoke("GetVoiceRangeResult", new object[] {
                        login_name,
                        password,
                        bgTime,
                        endTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVoiceRangeResultAsync(string login_name, string password, string bgTime, string endTime) {
            this.GetVoiceRangeResultAsync(login_name, password, bgTime, endTime, null);
        }
        
        /// <remarks/>
        public void GetVoiceRangeResultAsync(string login_name, string password, string bgTime, string endTime, object userState) {
            if ((this.GetVoiceRangeResultOperationCompleted == null)) {
                this.GetVoiceRangeResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVoiceRangeResultOperationCompleted);
            }
            this.InvokeAsync("GetVoiceRangeResult", new object[] {
                        login_name,
                        password,
                        bgTime,
                        endTime}, this.GetVoiceRangeResultOperationCompleted, userState);
        }
        
        private void OnGetVoiceRangeResultOperationCompleted(object arg) {
            if ((this.GetVoiceRangeResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVoiceRangeResultCompleted(this, new GetVoiceRangeResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVoiceResultByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVoiceResultByID(string login_name, string password, string cid, string count) {
            object[] results = this.Invoke("GetVoiceResultByID", new object[] {
                        login_name,
                        password,
                        cid,
                        count});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVoiceResultByIDAsync(string login_name, string password, string cid, string count) {
            this.GetVoiceResultByIDAsync(login_name, password, cid, count, null);
        }
        
        /// <remarks/>
        public void GetVoiceResultByIDAsync(string login_name, string password, string cid, string count, object userState) {
            if ((this.GetVoiceResultByIDOperationCompleted == null)) {
                this.GetVoiceResultByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVoiceResultByIDOperationCompleted);
            }
            this.InvokeAsync("GetVoiceResultByID", new object[] {
                        login_name,
                        password,
                        cid,
                        count}, this.GetVoiceResultByIDOperationCompleted, userState);
        }
        
        private void OnGetVoiceResultByIDOperationCompleted(object arg) {
            if ((this.GetVoiceResultByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVoiceResultByIDCompleted(this, new GetVoiceResultByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RechargeLog {
        
        private int logIdField;
        
        private string opTimeField;
        
        private int amountField;
        
        /// <remarks/>
        public int LogId {
            get {
                return this.logIdField;
            }
            set {
                this.logIdField = value;
            }
        }
        
        /// <remarks/>
        public string OpTime {
            get {
                return this.opTimeField;
            }
            set {
                this.opTimeField = value;
            }
        }
        
        /// <remarks/>
        public int Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendVoiceByVarCompletedEventHandler(object sender, SendVoiceByVarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendVoiceByVarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendVoiceByVarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendVoiceCompletedEventHandler(object sender, SendVoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendVoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendVoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendVoiceByCheckCompletedEventHandler(object sender, SendVoiceByCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendVoiceByCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendVoiceByCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendVoiceByIdCompletedEventHandler(object sender, SendVoiceByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendVoiceByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendVoiceByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetSmsStateReportCompletedEventHandler(object sender, GetSmsStateReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmsStateReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmsStateReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetSmsRespCompletedEventHandler(object sender, GetSmsRespCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmsRespCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmsRespCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendSmsPriCompletedEventHandler(object sender, SendSmsPriCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSmsPriCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSmsPriCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendSmsByTimingCompletedEventHandler(object sender, SendSmsByTimingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSmsByTimingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSmsByTimingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendSms6CompletedEventHandler(object sender, SendSms6CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSms6CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSms6CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendSmsCompletedEventHandler(object sender, SendSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendSms2CompletedEventHandler(object sender, SendSms2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSms2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSms2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendSms3CompletedEventHandler(object sender, SendSms3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSms3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSms3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendSms4CompletedEventHandler(object sender, SendSms4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSms4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSms4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendSms5CompletedEventHandler(object sender, SendSms5CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSms5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSms5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendSmsByTemplateCompletedEventHandler(object sender, SendSmsByTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSmsByTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSmsByTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendSmsExCompletedEventHandler(object sender, SendSmsExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSmsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSmsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendSmsByTplExCompletedEventHandler(object sender, SendSmsByTplExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSmsByTplExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSmsByTplExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetVoiceStateReportCompletedEventHandler(object sender, GetVoiceStateReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVoiceStateReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVoiceStateReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetVoiceCheckReportCompletedEventHandler(object sender, GetVoiceCheckReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVoiceCheckReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVoiceCheckReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetUserChargeLogCompletedEventHandler(object sender, GetUserChargeLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserChargeLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserChargeLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetUserChargeLogArrayCompletedEventHandler(object sender, GetUserChargeLogArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserChargeLogArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserChargeLogArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RechargeLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RechargeLog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetBalanceCompletedEventHandler(object sender, GetBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetSmsStateCompletedEventHandler(object sender, GetSmsStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmsStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmsStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendVoice3CompletedEventHandler(object sender, SendVoice3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendVoice3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendVoice3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendVoice2CompletedEventHandler(object sender, SendVoice2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendVoice2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendVoice2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetVoiceResultReportCompletedEventHandler(object sender, GetVoiceResultReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVoiceResultReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVoiceResultReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetVoiceRangeResultCompletedEventHandler(object sender, GetVoiceRangeResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVoiceRangeResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVoiceRangeResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetVoiceResultByIDCompletedEventHandler(object sender, GetVoiceResultByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVoiceResultByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVoiceResultByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591